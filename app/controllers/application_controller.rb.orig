class ApplicationController < ActionController::Base
  protect_from_forgery
  include SessionsHelper

  def require_login    
    if !session[:user_id].nil? && !User.where(id: session[:user_id]).empty?
      @current_user = User.find(session[:user_id])
    else
      redirect_to :root
    end
  end
  
 def require_admin
    if !session[:user_id].nil? 
      @current_user = User.find(session[:user_id])
      if @current_user.admin == true || @current_user.manager == true       
        return true
      else
        redirect_to :root
      end
    else
      redirect_to :root      
    end
  end



  def require_activation
    if !session[:user_id].nil?
      @current_user = User.find(session[:user_id])
      if @current_user.confirmed != "t"  
<<<<<<< HEAD
      	puts 'no good'
      	puts @current_user.id
        render :text => "Please activate User"
=======
        render :text => "Please activate User. <button id='data' class='btn btn-primary' value='activate' onclick='window.location.href=\"/send_mail\"'> click here  </button> to resend activation mail."
>>>>>>> cae589dfbb4a19cbbc395277e5877d6a12cbfdf2
      end
    else
      redirect_to :root
    end  
  end

  def require_work_order_admin
  	if !session[:user_id].nil?
  		@current_user = User.find(session[:user_id])
  		if @current_user.work_order_admin
  			return true
  		else
  			redirect_to :root
  		end
  	else
  		redirect_to :root
  	end
  end
  
  def require_client_restrict
  	if !session[:user_id].nil?
  		@current_user = User.find(session[:user_id])
  		if !@current_user.client
  			return true	
  		else
  			redirect_to '/new_client', :notice => 'User restricted to Client Access.'
  		end
  	end
  end
  
  def require_client
    if !session[:user_id].nil? && !User.where(id: session[:user_id]).empty?
    	user = User.find(session[:user_id])
  		if user.client
      		@current_user = User.find(session[:user_id])
  		else
  			redirect_to '/', :notice => 'Must have client permissions for Work Order Request page.'
  		end	
  	end
  end


end
